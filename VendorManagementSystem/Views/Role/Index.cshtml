
@using Kendo.Mvc.UI
@using VendorManagementSystem.ViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@(Html.Kendo().Grid<RoleViewModel>()
    .Name("RoleGrid")
    .Columns(columns =>
    {
        columns.Bound(c => c.Name);
        columns.Command(
            cmd =>
            {
                cmd.Edit();
                cmd.Destroy();
            });
    })
    .HtmlAttributes(new { style = "height: 550px;" })
    .Scrollable()
    .Groupable()
    .Sortable()
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
    .DataSource(
        dataSource => dataSource.Ajax()
            .Read(read => read.Action("Read_Role", "Role"))
            .Create(create => create.Action("Create_Role", "Role"))
            .Update(update => update.Action("Update_Role", "Role"))
            .Destroy(destroy => destroy.Action("Delete_Role", "Role"))
            .Model(
                model =>
                {
                    model.Field(role => role.Guid);
                    model.Id(role => role.Guid);
                })
            .PageSize(20)
    )
    .Editable(e => e.Mode(GridEditMode.PopUp)
        .TemplateName("RoleEditor")
        .Window(w => w.Title("Edit Role"))
        
        )
    .ToolBar(t => t.Create().Text("Add Role"))
    .Events(events => events
            .Edit("onCreate") // Add an event handler for the edit event
    )
)


<script>
    function onCreate(e) {
        // Check if the operation is "create" (adding a new record)
        if (e.model.isNew()) {
            // Customize the form title for the "Create" operation
            e.container.data("kendoWindow").title("Add Role");
        }
    }
</script>
